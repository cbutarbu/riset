{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thia\\\\Desktop\\\\riset\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Titles from \"./Components/Titles\";\nimport Form from \"./Components/Form\";\nimport Sunset from \"./Components/Sunset\";\nconst API_KEY_SUNSET_SUNRISE = \"a453161185ff4ed4aace0896829d1561\";\nconst API_KEY_LOCATION = \"OHOdqfMisrcnQKDl6lQNGcgPGGLMmMB7\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getLocation = async place => {\n      place.preventDefault();\n      const city = place.target.elements.city.value;\n      const country = place.target.elements.country.value; // Retrieve Data for coordinates\n\n      const api_call = await fetch(\"https://www.mapquestapi.com/geocoding/v1/address?key=\".concat(API_KEY_LOCATION, \"&inFormat=kvp&outFormat=json&location=\").concat(city, \"%2C+\").concat(country, \"&thumbMaps=false\"));\n      const data = await api_call.json(); // Retrieve data for sunsrise/sunset types\n\n      const latitude = data.results[0].locations[0].latLng.lat;\n      const longitude = data.results[0].locations[0].latLng.lng;\n      const api_call_2 = await fetch(\"https://api.ipgeolocation.io/astronomy?apiKey=\".concat(API_KEY_SUNSET_SUNRISE, \"&lat=\").concat(latitude, \"&long=\").concat(longitude));\n      const riset = await api_call_2.json(); //Set state with new information\n\n      this.setState({\n        city: data.results[0].locations[0].adminArea5,\n        state: data.results[0].locations[0].adminArea3,\n        latitude: data.results[0].locations[0].latLng.lat,\n        longitude: data.results[0].locations[0].latLng.lng,\n        sunrise: riset.sunrise,\n        sunset: riset.sunset\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      city: \"\",\n      state: \"\",\n      latitude: 0,\n      longitude: 0,\n      sunrise: \"\",\n      sunset: \"\"\n    };\n  }\n  /**\n   * Gets location inputted by user and get sunrise and sunset times\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getLocation: this.getLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Sunset, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Thia\\Desktop\\riset\\src\\App.js"],"names":["React","Titles","Form","Sunset","API_KEY_SUNSET_SUNRISE","API_KEY_LOCATION","App","Component","constructor","getLocation","place","preventDefault","city","target","elements","value","country","api_call","fetch","data","json","latitude","results","locations","latLng","lat","longitude","lng","api_call_2","riset","setState","adminArea5","state","adminArea3","sunrise","sunset","console","log","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,MAAMC,sBAAsB,GAAI,kCAAhC;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,WAdc,GAcA,MAAMC,KAAN,IAAgB;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBF,IAAtB,CAA2BG,KAAxC;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBE,OAAtB,CAA8BD,KAA9C,CAH4B,CAK5B;;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,gEAAyDb,gBAAzD,mDAAkHO,IAAlH,iBAA6HI,OAA7H,sBAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAP4B,CAS5B;;AACA,YAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,MAA7B,CAAoCC,GAArD;AACA,YAAMC,SAAS,GAAGP,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,MAA7B,CAAoCG,GAAtD;AACA,YAAMC,UAAU,GAAG,MAAMV,KAAK,yDAAkDd,sBAAlD,kBAAgFiB,QAAhF,mBAAiGK,SAAjG,EAA9B;AACA,YAAMG,KAAK,GAAG,MAAMD,UAAU,CAACR,IAAX,EAApB,CAb4B,CAe5B;;AACA,WAAKU,QAAL,CAAc;AACZlB,QAAAA,IAAI,EAAEO,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BQ,UADvB;AAEZC,QAAAA,KAAK,EAAEb,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BU,UAFxB;AAGZZ,QAAAA,QAAQ,EAAEF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,MAA7B,CAAoCC,GAHlC;AAIZC,QAAAA,SAAS,EAAEP,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,MAA7B,CAAoCG,GAJnC;AAKZO,QAAAA,OAAO,EAAEL,KAAK,CAACK,OALH;AAMZC,QAAAA,MAAM,EAAEN,KAAK,CAACM;AANF,OAAd;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD,KAvCa;;AAEZ,SAAKA,KAAL,GAAa;AACXpB,MAAAA,IAAI,EAAE,EADK;AAEXoB,MAAAA,KAAK,EAAE,EAFI;AAGXX,MAAAA,QAAQ,EAAE,CAHC;AAIXK,MAAAA,SAAS,EAAE,CAJA;AAKXQ,MAAAA,OAAO,EAAE,EALE;AAMXC,MAAAA,MAAM,EAAE;AANG,KAAb;AAQD;AACD;;;;;AA8BAG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAK7B,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAnD+B;;AAoDjC;AAED,eAAeH,GAAf","sourcesContent":["\nimport React from \"react\";\nimport Titles from \"./Components/Titles\"\nimport Form from \"./Components/Form\"\nimport Sunset from \"./Components/Sunset\"\n\n\nconst API_KEY_SUNSET_SUNRISE =  \"a453161185ff4ed4aace0896829d1561\";\nconst API_KEY_LOCATION = \"OHOdqfMisrcnQKDl6lQNGcgPGGLMmMB7\";\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      city: \"\",\n      state: \"\",\n      latitude: 0,\n      longitude: 0,\n      sunrise: \"\",\n      sunset: \"\"\n    }\n  }\n  /**\n   * Gets location inputted by user and get sunrise and sunset times\n   */\n  getLocation = async(place) => {\n    place.preventDefault();\n    const city = place.target.elements.city.value;\n    const country = place.target.elements.country.value;\n\n    // Retrieve Data for coordinates\n    const api_call = await fetch(`https://www.mapquestapi.com/geocoding/v1/address?key=${API_KEY_LOCATION}&inFormat=kvp&outFormat=json&location=${city}%2C+${country}&thumbMaps=false`);\n    const data = await api_call.json();\n\n    // Retrieve data for sunsrise/sunset types\n    const latitude = data.results[0].locations[0].latLng.lat;\n    const longitude = data.results[0].locations[0].latLng.lng;\n    const api_call_2 = await fetch(`https://api.ipgeolocation.io/astronomy?apiKey=${API_KEY_SUNSET_SUNRISE}&lat=${latitude}&long=${longitude}`);\n    const riset = await api_call_2.json();\n\n    //Set state with new information\n    this.setState({\n      city: data.results[0].locations[0].adminArea5,\n      state: data.results[0].locations[0].adminArea3,\n      latitude: data.results[0].locations[0].latLng.lat,\n      longitude: data.results[0].locations[0].latLng.lng,\n      sunrise: riset.sunrise,\n      sunset: riset.sunset\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n      <div>\n        <Titles />\n        <Form getLocation={this.getLocation}/>\n        <Sunset />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}