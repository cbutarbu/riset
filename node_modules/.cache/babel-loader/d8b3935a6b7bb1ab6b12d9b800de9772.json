{"ast":null,"code":"// xml2js is optional because only needed for geonames support\nvar xml2js = require(\"xml2js\");\n\nvar request = require(\"request\");\n\nvar _ = require('underscore');\n\nexports.geocode = function (providerOpts, loc, cbk, opts) {\n  var options = _.extend({\n    q: loc,\n    flags: \"J\",\n    appid: providerOpts.appid || \"[yourappidhere]\"\n  }, opts || {});\n\n  request({\n    uri: \"http://where.yahooapis.com/geocode\",\n    qs: options\n  }, function (err, resp, body) {\n    if (err) return cbk(err);\n    var result;\n\n    try {\n      result = JSON.parse(body);\n    } catch (err) {\n      cbk(err);\n      return;\n    }\n\n    cbk(null, result);\n  });\n}; // yahoo placefinder api http://developer.yahoo.com/geo/placefinder/guide/\n\n\nexports.reverseGeocode = function (providerOpts, lat, lng, cbk, opts) {\n  var options = _.extend({\n    q: lat + \", \" + lng,\n    gflags: \"R\",\n    flags: \"J\",\n    appid: providerOpts.appid || \"[yourappidhere]\"\n  }, opts || {});\n\n  request({\n    uri: \"http://where.yahooapis.com/geocode\",\n    qs: options\n  }, function (err, resp, body) {\n    // console.log(\"[GEOCODER Yahoo API] uri:\", \"http://where.yahooapis.com/geocode\");\n    // console.log(\"[GEOCODER Yahoo API] options:\", JSON.stringify(options));\n    // console.log(\"[GEOCODER Yahoo API] body:\", body);\n    if (err) return cbk(err);\n    var result;\n\n    try {\n      result = JSON.parse(body);\n    } catch (err) {\n      cbk(err);\n      return;\n    } // Transform yahoo' structure into something that looks like Google's JSON outpu\n    // https://developers.google.com/maps/documentation/geocoding/#JSON\n\n\n    var googlejson = {\n      \"status\": \"OK\",\n      \"results\": [{\n        \"address_components\": [],\n        \"formatted_address\": \"\",\n        \"geometry\": {\n          \"location\": {\n            \"lat\": lat,\n            \"lng\": lng\n          }\n        }\n      }]\n    };\n\n    if (result.ResultSet.Error !== \"0\" && result.ResultSet.Error !== 0) {\n      console.log(\"[GEOCODER Yahoo API] ERROR\", result.Error, result.ErrorMessage);\n      return cbk(result.ResultSet.ErrorMessage);\n    }\n\n    var a = null; // Yahoo seems to change its response format \"randomly\". So, sometimes, it there is only one result,\n    // it will be in ResultSet.Result, and sometimes, in ResultSet.Results[0]\n\n    if (undefined !== result.ResultSet.Result) {\n      a = result.ResultSet.Result;\n    } else if (result.ResultSet.Results && result.ResultSet.Results.length) {\n      a = result.ResultSet.Results[0];\n    }\n\n    if (!a) {\n      return cbk(\"Error getting results from Yahoo API\");\n    }\n\n    if (a.house) googlejson.results[0].address_components.push({\n      \"long_name\": a.house,\n      \"short_name\": a.house,\n      \"types\": [\"street_number\"]\n    });\n    if (a.street) googlejson.results[0].address_components.push({\n      \"long_name\": a.street,\n      \"short_name\": a.street,\n      \"types\": [\"route\"]\n    });\n    if (a.city) googlejson.results[0].address_components.push({\n      \"long_name\": a.city,\n      \"short_name\": a.city,\n      \"types\": [\"locality\", \"political\"]\n    });\n    if (a.state) googlejson.results[0].address_components.push({\n      \"long_name\": a.state,\n      \"short_name\": a.statecode || a.state,\n      \"types\": [\"administrative_area_level_1\", \"political\"]\n    });\n    if (a.county) googlejson.results[0].address_components.push({\n      \"long_name\": a.county,\n      \"short_name\": a.countycode || a.county,\n      \"types\": [\"administrative_area_level_2\", \"political\"]\n    });\n    if (a.country) googlejson.results[0].address_components.push({\n      \"long_name\": a.country,\n      \"short_name\": a.countrycode,\n      \"types\": [\"country\"]\n    });\n    if (a.postal) googlejson.results[0].address_components.push({\n      \"long_name\": a.postal,\n      \"short_name\": a.postal,\n      \"types\": [\"postal_code\"]\n    });\n    if (a.latitude) googlejson.results[0].geometry.location = {\n      \"lat\": parseFloat(a.latitude),\n      \"lng\": parseFloat(a.longitude)\n    }; // Make a formatted address as well as we can\n\n    var formatted = [];\n    if (a.line1) formatted.push(a.line1);\n    if (a.line2) formatted.push(a.line2);\n    if (a.line3) formatted.push(a.line3);\n    if (a.line4) formatted.push(a.line4);\n    googlejson.results[0].formatted_address = formatted.join(\", \"); // console.log(\"[GEOCODER Yahoo API], calling callback w/\", JSON.stringify(googlejson));\n\n    cbk(null, googlejson);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}